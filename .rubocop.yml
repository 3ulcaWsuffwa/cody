AllCops:
  Exclude:
    # Exclude spec directories because I'm freer about the style there
    - 'spec/**/*'
    # Exclude db directories because a lot of that is generated by Rails
    - 'db/**/*'
    # Exclude config directories because most of it is generated
    - 'config/**/*'
    # Exclude bin directories because they are generated
    - 'bin/**/*'
    - 'Rakefile'
    - 'config.ru'
  DisplayCopNames: true
  DisabledByDefault: true
  TargetRailsVersion: 5.1

Rails:
  Enabled: true

# Number of spaces for each indentation level
Layout/IndentationWidth:
  Enabled: true
  Width: 2
  IgnoredPatterns: []

Layout/AccessModifierIndentation:
  Enabled: true
  EnforcedStyle: indent
  SupportedStyles:
    - indent
    - outdent

Layout/AlignArray:
  Enabled: true

Layout/AlignHash:
  Enabled: true
  EnforcedLastArgumentHashStyle: ignore_implicit

Layout/AlignParameters:
  Enabled: true
  EnforcedStyle: with_fixed_indentation
  SupportedStyles:
    - with_first_parameter
    - with_fixed_indentation

Layout/BlockEndNewline:
  Enabled: true

Layout/CommentIndentation:
  Enabled: true

Layout/ElseAlignment:
  Enabled: true

Layout/EmptyLineBetweenDefs:
  Enabled: true
  NumberOfEmptyLines: 1
  AllowAdjacentOneLineDefs: false

Layout/EmptyLines:
  Enabled: true

Layout/EmptyLinesAroundAccessModifier:
  Enabled: true

Layout/EmptyLinesAroundArguments:
  Enabled: true

Layout/ExtraSpacing:
  Enabled: true

Layout/FirstArrayElementLineBreak:
  Enabled: true

Layout/FirstHashElementLineBreak:
  Enabled: true

Layout/FirstMethodArgumentLineBreak:
  Enabled: true

Layout/FirstMethodParameterLineBreak:
  Enabled: true

Layout/IndentArray:
  Enabled: true
  EnforcedStyle: consistent
  SupportedStyles:
    - align_brackets
    - consistent
    - special_inside_parentheses

Layout/IndentHash:
  Enabled: true
  EnforcedStyle: consistent
  SupportedStyles:
    - align_brackets
    - consistent
    - special_inside_parentheses

Layout/IndentationConsistency:
  Enabled: true
  EnforcedStyle: normal
  SupportedStyles:
    - normal
    - rails

Layout/InitialIndentation:
  Enabled: true

Layout/MultilineArrayBraceLayout:
  Enabled: true
  EnforcedStyle: new_line
  SupportedStyles:
    - symmetrical
    - new_line
    - same_line

Layout/MultilineBlockLayout:
  Enabled: true

Layout/MultilineHashBraceLayout:
  Enabled: true
  EnforcedStyle: new_line
  SupportedStyles:
    - symmetrical
    - new_line
    - same_line

Layout/MultilineMethodCallIndentation:
  Enabled: true
  EnforcedStyle: indented
  SupportedStyles:
    - aligned
    - indented
    - indented_relative_to_receiver

Layout/MultilineOperationIndentation:
  Enabled: true
  EnforcedStyle: indented
  SupportedStyles:
    - aligned
    - indented

Layout/RescueEnsureAlignment:
  Enabled: true

Layout/SpaceAfterColon:
  Enabled: true

Layout/SpaceAfterComma:
  Enabled: true

Layout/SpaceAfterMethodName:
  Enabled: true

Layout/SpaceAroundBlockParameters:
  Enabled: true
  EnforcedStyleInsidePipes: no_space
  SupportedStyles:
    - no_space
    - space

Layout/SpaceAroundEqualsInParameterDefault:
  Enabled: true
  EnforcedStyle: space
  SupportedStyles:
    - space
    - no_space

Layout/SpaceAroundKeyword:
  Enabled: true

Layout/SpaceBeforeBlockBraces:
  Enabled: true

Layout/SpaceBeforeComma:
  Enabled: true

Layout/SpaceBeforeComment:
  Enabled: true

Layout/SpaceInLambdaLiteral:
  Enabled: true

Layout/SpaceInsideArrayLiteralBrackets:
  Enabled: true

Layout/SpaceInsideArrayPercentLiteral:
  Enabled: true

Layout/SpaceInsideBlockBraces:
  Enabled: true

Layout/SpaceInsideHashLiteralBraces:
  Enabled: true

Layout/SpaceInsideParens:
  Enabled: true

Layout/SpaceInsidePercentLiteralDelimiters:
  Enabled: true

Layout/SpaceInsideRangeLiteral:
  Enabled: true

Layout/SpaceInsideReferenceBrackets:
  Enabled: true

Layout/SpaceInsideStringInterpolation:
  Enabled: true

Layout/Tab:
  Enabled: true

Layout/TrailingBlankLines:
  Enabled: true

Layout/TrailingWhitespace:
  Enabled: true

Layout/BlockAlignment:
  Enabled: true
  EnforcedStyleAlignWith: start_of_block
  SupportedStyles:
    - either
    - start_of_block
    - start_of_line

Lint/Debugger:
  Enabled: true
  Severity: fatal

Layout/DefEndAlignment:
  Enabled: true
  EnforcedStyleAlignWith: start_of_line
  SupportedStyles:
    - def
    - start_of_line

Lint/DeprecatedClassMethods:
  Enabled: true

Lint/DuplicateCaseCondition:
  Enabled: true

Lint/DuplicateMethods:
  Enabled: true

Lint/DuplicatedKey:
  Enabled: true

Lint/EachWithObjectArgument:
  Enabled: true
  Details: >-
    `each_with_object` mutates the memo after each iteration of the block, so
    using an immutable object defeats the purpose.

Lint/ElseLayout:
  Enabled: true

Lint/EmptyEnsure:
  Enabled: true

Layout/EndAlignment:
  Enabled: true
  EnforcedStyleAlignWith: variable

Lint/EnsureReturn:
  Enabled: true

Lint/FormatParameterMismatch:
  Enabled: true

Lint/HandleExceptions:
  Enabled: true

Lint/IneffectiveAccessModifier:
  Enabled: true

Lint/Loop:
  Enabled: true

Lint/RescueException:
  Enabled: true

Lint/SafeNavigationChain:
  Enabled: true
  Details: >-
    If a previous safe navigation operation fails, the receiving object will be
    `nil`, so calling any method without use of safe navigation could fail.

Lint/UnreachableCode:
  Enabled: true

Lint/UselessAssignment:
  Enabled: true

Style/AndOr:
  Enabled: true
  EnforcedStyle: always
  SupportedStyles:
    - always
    - conditionals

Style/BeginBlock:
  Enabled: true

Style/BlockComments:
  Enabled: true

Style/BlockDelimiters:
  Enabled: true
  EnforcedStyle: braces_for_chaining
  SupportedStyles:
    - line_count_based
    - semantic
    - braces_for_chaining

Style/CaseEquality:
  Enabled: true

Style/ClassCheck:
  Enabled: true
  EnforcedStyle: is_a?
  SupportedStyles:
    - is_a?
    - kind_of?

Style/ClassMethods:
  Enabled: true

Style/ClassVars:
  Enabled: true

Style/CollectionMethods:
  Enabled: true
  PreferredMethods:
    collect: map
    collect!: map!
    inject: reduce
    detect: find
    find_all: select

Style/ColonMethodCall:
  Enabled: true

Style/ColonMethodDefinition:
  Enabled: true

Style/EmptyLiteral:
  Enabled: true

Style/EndBlock:
  Enabled: true

Style/EvalWithLocation:
  Enabled: true

Style/For:
  Enabled: true
  EnforcedStyle: each
  SupportedStyles:
    - each
    - for

Style/FormatString:
  Enabled: true
  EnforcedStyle: format
  SupportedStyles:
    - format
    - sprintf
    - percent

Style/FrozenStringLiteralComment:
  Enabled: true
  EnforcedStyle: when_needed
  Exclude:
    - "**/*.rake"
    - Gemfile

Style/GlobalVars:
  Enabled: true
  AllowedVariables: []

Style/HashSyntax:
  Enabled: true
  EnforcedStyle: no_mixed_keys
  SupportedStyles:
    - ruby19
    - hash_rockets
    - no_mixed_keys
    - ruby19_no_mixed_keys
  UseHashRocketsWithSymbolValues: false
  PreferHashRocketsForNonAlnumEndingSymbols: false

Style/IdenticalConditionalBranches:
  Enabled: true

Style/IfInsideElse:
  Enabled: true

Style/IfUnlessModifierOfIfUnless:
  Enabled: true

Style/LineEndConcatenation:
  Enabled: true
  Details: >-
    Use `\` when splitting a String over multiple lines because this is still
    interpreted by Ruby as a single String literal. Using other operators has
    a runtime cost that is unnecessary for String literals.

Style/MethodDefParentheses:
  Enabled: true

Style/MultilineTernaryOperator:
  Enabled: true

Style/NestedTernaryOperator:
  Enabled: true

Style/Not:
  Enabled: true

Style/OptionalArguments:
  Enabled: true

Style/PercentLiteralDelimiters:
  Enabled: true
  PreferredDelimiters:
    default: '()'
    '%': '()'
    '%q': '()'
    '%Q': '()'
    '%x': '()'
    '%r': '{}'
    '%w': '()'

Style/PerlBackrefs:
  Enabled: true
  Details: >-
    Perl-style backrefs are cryptic and unclear. Use `Regexp.last_match(1)`
    instead, or use `Regexp#match` to obtain a `MatchData` object instead.

Style/RegexpLiteral:
  Enabled: true
  EnforcedStyle: mixed
  SupportedStyles:
    - slashses
    - percent_r
    - mixed
  AllowInnerSlashes: false

Style/RescueModifier:
  Enabled: true

Style/Semicolon:
  Enabled: true
  AllowAsExpressionSeparator: false

Style/SpecialGlobalVars:
  Enabled: true
  EnforcedStyle: use_english_names
  SupportedStyles:
    - use_english_names
    - use_perl_names

Style/UnlessElse:
  Enabled: true

Security/Eval:
  Enabled: true
  Severity: fatal

Rails/ActionFilter:
  Enabled: true
  EnforcedStyle: action
  SupportedStyles:
    - action
    - filter

Rails/Date:
  Enabled: true
  EnforcedStyle: flexible
  SupportedStyles:
    - flexible
    - strict

Rails/DynamicFindBy:
  Enabled: true
  Whitelist:
    - find_by_sql
    - find_by_full_name

Rails/FindBy:
  Enabled: true

Rails/OutputSafety:
  Enabled: true

Rails/ScopeArgs:
  Enabled: true

Rails/TimeZone:
  Enabled: true
  EnforcedStyle: flexible
  SupportedStyles:
    - flexible
    - strict

Rails/UniqBeforePluck:
  Enabled: true
  EnforcedStyle: conservative
  SupportedStyles:
    - conservative
    - aggressive

Performance/CompareWithBlock:
  Enabled: true

Performance/Count:
  Enabled: true

Performance/Detect:
  Enabled: true

Performance/DoubleStartEndWith:
  Enabled: true

Performance/EndWith:
  Enabled: true

Performance/FixedSize:
  Enabled: true

Performance/RedundantMatch:
  Enabled: true

Performance/RegexpMatch:
  Enabled: true

Performance/Size:
  Enabled: true

Performance/StartWith:
  Enabled: true

Naming/AccessorMethodName:
  Enabled: true

Naming/AsciiIdentifiers:
  Enabled: true

Naming/ClassAndModuleCamelCase:
  Enabled: true

Naming/ConstantName:
  Enabled: true

Naming/FileName:
  Enabled: true

Naming/MethodName:
  Enabled: true
  EnforcedStyle: snake_case
  SupportedStyles:
    - snake_case
    - camelCase

Naming/PredicateName:
  Enabled: true
  # The list of method name prefixes that identifies predicate methods. This
  # tells RuboCop that if a method name starts with one of these, the author
  # was intending to write a predicate method.
  NamePrefix:
    - is_
    - has_
    - have_
  # The list of method name prefixes to blacklist. This tells RuboCop that
  # predicate methods should not start with these prefixes.
  NamePrefixBlacklist:
    - is_
    - has_
    - have_
  # It's okay for these predicate methods to use blacklisted prefixes.
  NameWhitelist:
    - is_a?

Naming/VariableName:
  Enabled: true
  EnforcedStyle: snake_case
  SupportedStyles:
    - snake_case
    - camelCase

Metrics/LineLength:
  Enabled: true
  Max: 80
  Exclude:
    - Gemfile

Bundler/DuplicatedGem:
  Enabled: true

Bundler/InsecureProtocolSource:
  Enabled: true
